;; A config that maps caps lock to esc when tapped and super when held

(defcfg
  process-unmapped-keys yes
)

(defsrc
    esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
    lsgt 1    2    3    4    5    6    7    8    9    0    -    =    bspc
    tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
    caps a    s    d    f    g    h    j    k    l    ;    '    ret
    lsft grv  z    x    c    v    b    n    m    ,    .    /    rsft
    fn   lctl lalt lmet           spc            rmet ralt
)

(defvar
    tap-timeout 100
    hold-timeout 200
    tt $tap-timeout
    ht $hold-timeout
)

(defalias
    fnl (tap-hold $tt $ht fn (layer-toggle fn))
    ces (tap-hold-press 200 200 esc (layer-while-held super))
    abr sldr

    supr (multi lctl lalt lmet)
    dupr (multi shft @supr)

    hma (tap-hold 200 200 a lmet)

    mc f13
    src f14
    mic f15
    dnd f16
)

(deflayer base
    esc  brdn brup @mc  @src @mic @dnd prev pp   next mute vold  volu
    lsgt 1    2    3    4    5    6    7    8    9    0    -    =    bspc
    tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
    @ces a    s    d    f    g    h    j    k    l    ;    '    ret
    lsft grv  z    x    c    v    b    n    m    ,    .    /    @abr
    @fnl lctl lalt lmet           spc            rmet ralt
)

(deflayer fn
    esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12 
    _    _    _    _    _    _    _    _    _    _    _    _    _    _
    _    _    _    _    _    _    _    _    _    _    _    _    _    _
    _    _    _    _    _    _    _    _    _    _    _    _    _
    _    _    _    _    _    _    _    _    _    _    _    _    _
    _    _    _    _              _              _    _
)

(deflayer super
    esc  brdn brup f13  f14  f15  f16  prev pp   next mute vold  volu
    lsgt  @su1 @su2 @su3 @su4 @su5 @su6 @su7 @su8 @su9 @su0 @su- @su= bspc
    @sutb @suq @suw @sue @sur @sut @suy @suu @sui @suo @sup [    ]    \
    _     @sua @sus @sud @suf @sug @suh @suj @suk @sul ;    '    ret
    @suls  grv @suz @sux @suc @suv @sub @sun @sum ,    .    /    _   
    _    _    _    _              @susp          _    _   
)

(defalias
    sua (chord super a)
    sub (chord super b)
    suc (chord super c)
    sud (chord super d)
    sue (chord super e)
    suf (chord super f)
    sug (chord super g)
    suh (chord super h)
    sui (chord super i)
    suj (chord super j)
    suk (chord super k)
    sul (chord super l)
    sum (chord super m)
    sun (chord super n)
    suo (chord super o)
    sup (chord super p)
    suq (chord super q)
    sur (chord super r)
    sus (chord super s)
    sut (chord super t)
    suu (chord super u)
    suv (chord super v)
    suw (chord super w)
    sux (chord super x)
    suy (chord super y)
    suz (chord super z)

    su1 (chord super 1)
    su2 (chord super 2)
    su3 (chord super 3)
    su4 (chord super 4)
    su5 (chord super 5)
    su6 (chord super 6)
    su7 (chord super 7)
    su8 (chord super 8)
    su9 (chord super 9)
    su0 (chord super 0)

    sutb (chord super tab)
    su- (chord super -)
    su= (chord super =)

    suls (chord super lsft)
    susp (chord super spc)
)

(defchords super 500
    (a)         (multi @supr a)         ;; open arc
    (b)         (multi lalt lft)        ;; left one word
    (c)         nop0
    (d)         bspc
    (e)         ret
    (lsft e)    (multi lmet ret)        ;; cmd + enter idiom
    (f)         (multi @supr f)         ;; homerow find
    (lsft f)    (multi @dupr f)         ;; homerow search
    (g)         nop0
    (h)         (multi @supr h)         ;; aerospace
    (lsft h)    (multi @dupr h)         ;; aerospace
    (i)         nop0
    (j)         (multi @supr j)         ;; aerospace
    (lsft j)    (multi @dupr j)         ;; aerospace
    (k)         (multi @supr k)         ;; aerospace
    (lsft k)    (multi @dupr k)         ;; aerospace
    (l)         (multi @supr l)         ;; aerospace
    (lsft l)    (multi @dupr l)         ;; aerospace
    (m)         nop0
    (n)         nop0
    (o)         nop0
    (p)         nop0
    (q)         nop0
    (r)         nop0
    (s)         (multi @supr s)         ;; open slack
    (t)         nop0
    (u)         nop0
    (v)         nop0
    (w)         (multi lalt rght)       ;; right one word
    (x)         nop0
    (y)         nop0
    (z)         nop0

    (1)         (multi @supr 1)         ;; aerospace
    (lsft 1)    (multi @dupr 1)         ;; aerospace
    (2)         (multi @supr 2)         ;; aerospace
    (lsft 2)    (multi @dupr 2)         ;; aerospace
    (3)         (multi @supr 3)         ;; aerospace
    (lsft 3)    (multi @dupr 3)         ;; aerospace
    (4)         (multi @supr 4)         ;; aerospace
    (lsft 4)    (multi @dupr 4)         ;; aerospace
    (5)         (multi @supr 5)         ;; aerospace
    (lsft 5)    (multi @dupr 5)         ;; aerospace
    (6)         (multi @supr 6)         ;; aerospace
    (lsft 6)    (multi @dupr 6)         ;; aerospace
    (7)         (multi @supr 7)         ;; aerospace
    (lsft 7)    (multi @dupr 7)         ;; aerospace
    (8)         (multi @supr 8)         ;; aerospace
    (lsft 8)    (multi @dupr 8)         ;; aerospace
    (9)         (multi @supr 9)         ;; aerospace
    (lsft 9)    (multi @dupr 9)         ;; aerospace
    (0)         (multi @supr 0)         ;; aerospace
    (lsft 0)    (multi @dupr 0)         ;; aerospace

    (tab)      (multi @supr tab )       ;; aerospace
    (lsft tab) (multi @dupr tab)        ;; aerospace
    (-)       (multi @supr -)           ;; aerospace
    (lsft -)  (multi @dupr -)           ;; aerospace
    (=)       (multi @supr =)           ;; aerospace
    (lsft =)  (multi @dupr =)           ;; aerospace

    (spc)       (multi lmet spc)

    (b a r)     (multi lctl f2)         ;; focus menu bar
    (d e s k)   (multi @dupr d)         ;; show desktop
    (d o c k)   (multi lctl f3)         ;; focus dock
    (d w)       (multi lalt bspc)       ;; delete word
    (f i n d)   (multi lmet lsft spc)   ;; find in finder
    (h e l p)   (multi @dupr h)         ;; open application help
    (i n v)     (multi @dupr i)         ;; invert colors
    (k e y)     (multi @supr k)         ;; KeyCastr show keys
    (m c)       @mc                     ;; mission control
    (n c)       (multi @dupr ])         ;; notification center
    (n o t e)   (multi @dupr n)         ;; new quick note
)

(defseq
    the         (t spc)
    The         (lsft t spc)
    that        (t h spc)
    That        (lsft t h spc)
    multiplexer (m u x spc)
    Multiplexer (lsft m u x spc)
)
(defvirtualkeys
    the         (macro t h e spc)
    The         (macro S-t h e spc)
    that        (macro t h a t spc)
    That        (macro S-t h a t spc)
    multiplexer (macro m u l t i p l e x e r spc)
    Multiplexer (macro S-m u l t i p l e x e r spc)
)


